_HiStOrY_V2_
quit
describe\040keyspace;
create\040keyspace\040dev\040with\040replication\040=\040{'class':'SimpleStrategy','replication_factor':1};
use\040dev;
describe\040keyspace;
CREATE\040TABLE\040t\040(
\040\040\040\040a\040int,
\040\040\040\040b\040int,
\040\040\040\040c\040int,
\040\040\040\040PRIMARY\040KEY\040(a));
CREATE\040TABLE\040t\040(\040\040\040\040\040a\040int,\040\040\040\040\040b\040int,\040\040\040\040\040c\040int,\040\040\040\040\040PRIMARY\040KEY\040(a));
insert\040into\040t\040values\040(11,22,33);
insert\040into\040t\040(a,b,c)\040values\040(11,22,33);
select\040*\040from\040t;
insert\040into\040t\040(a,b,c)\040values\040(11,22,33);
insert\040into\040t\040(a,b,c)\040values\040(11,22,333);
select\040*\040from\040t;
create\040table\040tt\040(a\040int,\040b\040int,\040c\040int)\040primary\040key(a,b));
create\040table\040tt\040(a\040int,\040b\040int,\040c\040int,\040primary\040key(a,b));
insert\040into\040tt\040(a,b,c)\040values\040(11,22,33);
insert\040into\040tt\040(a,b,c)\040values\040(11,22,333);
select\040*\040from\040tt;
update\040tt\040set\040c\040=\040444\040where\040a=11\040and\040b=22;
select\040*\040from\040tt;
update\040tt\040set\040c\040=\0405\040where\040a=11\040;
insert\040into\040tt\040(a,b,c)\040values\040(11,22,33);
select\040*\040from\040tt;
CREATE\040TABLE\040T\040(
\040\040pk\040int,
\040\040f1\040int,
\040\040PRIMARY\040KEY\040(pk)
);
CREATE\040TABLE\040T\040(\040\040\040pk\040int,\040\040\040f1\040int,\040\040\040PRIMARY\040KEY\040(pk)\040);
drop\040table\040t;
CREATE\040TABLE\040T\040(\040\040\040pk\040int,\040\040\040f1\040int,\040\040\040PRIMARY\040KEY\040(pk)\040);
INSERT\040INTO\040T\040(pk,\040f1)\040VALUES\040(1,\0401);
UPDATE\040T\040SET\040f1=2\040where\040pk=2;
SELECT\040*\040FROM\040T;
UPDATE\040T\040SET\040f1\040=\040null\040WHERE\040pk\040=\0401;
UPDATE\040T\040SET\040f1\040=\040null\040WHERE\040pk\040=\0402;
SELECT\040*\040FROM\040T;
UPDATE\040T\040SET\040f1=2\040where\040pk=2;
SELECT\040*\040FROM\040T;
UPDATE\040T\040SET\040f1=5\040where\040pk=2;
SELECT\040*\040FROM\040T;
UPDATE\040T\040SET\040f1=null\040where\040pk=2;
SELECT\040*\040FROM\040T;
UPDATE\040T\040SET\040f1=null\040where\040pk=2;
SELECT\040*\040FROM\040T;
INSERT\040INTO\040T\040(pk,\040f1)\040VALUES\040(3,\040null);
SELECT\040*\040FROM\040T;
UPDATE\040T\040SET\040f1=null\040where\040pk=3;
SELECT\040*\040FROM\040T;
UPDATE\040T\040SET\040f1=12\040where\040pk=3;
SELECT\040*\040FROM\040T;
UPDATE\040T\040SET\040f1=null\040where\040pk=3;
SELECT\040*\040FROM\040T;
UPDATE\040T\040SET\040f1=null\040where\040pk=4;
SELECT\040*\040FROM\040T;
INSERT\040INTO\040T\040(pk,\040f1)\040VALUES\040(3,\040555);
SELECT\040*\040FROM\040T;
INSERT\040INTO\040T\040(pk,\040f1)\040VALUES\040(3,\040null);
SELECT\040*\040FROM\040T;
UPDATE\040T\040SET\040f1=2\040where\040pk=2;
SELECT\040*\040FROM\040T;
UPDATE\040T\040SET\040f1=null\040where\040pk=2\040and\040f1=2;
UPDATE\040T\040SET\040f1=null\040where\040pk=2\040;
SELECT\040*\040FROM\040T;
drop\040table\040t;
CREATE\040TABLE\040T\040(\040\040\040pk\040int,\040\040\040f1\040int,\040\040f2\040int,\040PRIMARY\040KEY\040(pk)\040);
INSERT\040INTO\040T\040(pk,\040f1)\040VALUES\040(1,\04011,\040111);
INSERT\040INTO\040T\040(pk,\040f1,\040f2)\040VALUES\040(1,\04011,\040111);
SELECT\040*\040FROM\040T;
INSERT\040INTO\040T\040(pk,\040f1)\040VALUES\040(2,\04022);
SELECT\040*\040FROM\040T;
UPDATE\040T\040SET\040f1=null\040where\040pk=1\040;
SELECT\040*\040FROM\040T;
UPDATE\040T\040SET\040f1=33\040where\040pk=3\040;
SELECT\040*\040FROM\040T;
UPDATE\040T\040SET\040f1=null\040where\040pk=3\040;
SELECT\040*\040FROM\040T;
select\040count(*)\040from\040t;
select\040*\040from\040t\040where\040pk\040in\040('1')
;
select\040*\040from\040t\040where\040pk\040in\040('1')\040;
select\040*\040from\040t\040where\040pk\040in\040("1")\040;
select\040*\040from\040t\040where\040pk\040in\040(1)\040;
describe\040t;
UPDATE\040T\040SET\040f1=null,\040f3=444where\040pk=3\040;
UPDATE\040T\040SET\040f1=null,\040f3=444\040where\040pk=3\040;
insert\040into\040T\040(pk,f1,f2,f3)\040values\040(4,4,4,4)3\040;
insert\040into\040T\040(pk,f1,f2,f3)\040values\040(4,4,4,4)\040;
select\040*\040from\040t\040where\040f2\040in\040(111)\040;
select\040*\040from\040t\040where\040f1\040in\040(null)\040;
select\040*\040from\040t\040where\040f2\040in\040(111)\040allow\040filtering;
CREATE\040TABLE\040temperature\040(
weatherstation_id\040text,
event_time\040timestamp,
temperature\040text,
PRIMARY\040KEY\040(weatherstation_id,event_time)
);
CREATE\040TABLE\040temperature\040(\040weatherstation_id\040text,\040event_time\040timestamp,\040temperature\040text,\040PRIMARY\040KEY\040(weatherstation_id,event_time)\040);
INSERT\040INTO\040temperature(weatherstation_id,event_time,temperature)
2013-04-03\04007:);72F01:,00,1234ABCDVALUES\040(
INSERT\040INTO\040temperature(weatherstation_id,event_time,temperature)
2013-04-03\04007:);73F02:,00,1234ABCDVALUES\040(
INSERT\040INTO\040temperature(weatherstation_id,event_time,temperature)
2013-04-03\04007:);73F03:,00,1234ABCDVALUES\040(
INSERT\040INTO\040temperature(weatherstation_id,event_time,temperature)
2013-04-03\04007:);74F04:,00,1234ABCDVALUES\040(
SELECT\040event_time,temperature
FROM\040temperature
WHERE\040;1234ABCDweatherstation_id=
SELECT\040event_time,temperature
FROM\040temperature
SELECT\040event_time,temperature
FROM\040temperature
WHERE\040;1234ABCDweatherstation_id=
'
;
INSERT\040INTO\040temperature(weatherstation_id,event_time,temperature)
2013-04-03\04007:);72F01:,00,1234ABCDVALUES\040(
INSERT\040INTO\040temperature(weatherstation_id,event_time,temperature)
2013-04-03\04007:);73F02:,00,1234ABCDVALUES\040(
INSERT\040INTO\040temperature(weatherstation_id,event_time,temperature)
2013-04-03\04007:);73F03:,00,1234ABCDVALUES\040(
INSERT\040INTO\040temperature(weatherstation_id,event_time,temperature)
2013-04-03\04007:);74F04:,00,1234ABCDVALUES\040(
INSERT\040INTO\040temperature(weatherstation_id,event_time,temperature)
VALUES\040('1234ABCD','2013-04-03\04007:01:00','72F');
INSERT\040INTO\040temperature(weatherstation_id,event_time,temperature)\040VALUES\040('1234ABCD','2013-04-03\04007:01:00','72F');
INSERT\040INTO\040temperature(weatherstation_id,event_time,temperature)
VALUES\040('1234ABCD','2013-04-03\04007:02:00','73F');
INSERT\040INTO\040temperature(weatherstation_id,event_time,temperature)\040VALUES\040('1234ABCD','2013-04-03\04007:02:00','73F');
INSERT\040INTO\040temperature(weatherstation_id,event_time,temperature)
VALUES\040('1234ABCD','2013-04-03\04007:03:00','73F');
INSERT\040INTO\040temperature(weatherstation_id,event_time,temperature)\040VALUES\040('1234ABCD','2013-04-03\04007:03:00','73F');
INSERT\040INTO\040temperature(weatherstation_id,event_time,temperature)
VALUES\040('1234ABCD','2013-04-03\04007:04:00','74F');
INSERT\040INTO\040temperature(weatherstation_id,event_time,temperature)\040VALUES\040('1234ABCD','2013-04-03\04007:04:00','74F');
select\040*\040from\040temperature;
SELECT\040event_time,temperature
FROM\040temperature
WHERE\040weatherstation_id='1234ABCD';
SELECT\040event_time,temperature\040FROM\040temperature\040WHERE\040weatherstation_id='1234ABCD';
INSERT\040INTO\040temperature(weatherstation_id,event_time,temperature)\040VALUES\040('1234ABCD','2010-04-03\04007:04:00','74F')\040using\040ttl\0401;;
INSERT\040INTO\040temperature(weatherstation_id,event_time,temperature)\040VALUES\040('1234ABCD','2010-04-03\04007:04:00','74F')\040using\040ttl\0401;
SELECT\040event_time,temperature\040FROM\040temperature\040WHERE\040weatherstation_id='1234ABCD';
INSERT\040INTO\040temperature(weatherstation_id,event_time,temperature)\040VALUES\040('1234ABCD','2010-04-03\04007:04:00','74F')\040using\040ttl\04010;
SELECT\040event_time,temperature\040FROM\040temperature\040WHERE\040weatherstation_id='1234ABCD';
CREATE\040OR\040REPLACE\040FUNCTION\040averageState(state\040tuple<int,bigint>,\040val\040int)
\040\040\040\040CALLED\040ON\040NULL\040INPUT
\040\040\040\040RETURNS\040tuple
\040\040\040\040LANGUAGE\040java
\040\040\040\040AS\040$$
\040\040\040\040\040\040\040\040if\040(val\040!=\040null)\040{
\040\040\040\040\040\040\040\040\040\040\040\040state.setInt(0,\040state.getInt(0)+1);
\040\040\040\040\040\040\040\040\040\040\040\040state.setLong(1,\040state.getLong(1)+val.intValue());
\040\040\040\040\040\040\040\040}
\040\040\040\040\040\040\040\040return\040state;
\040\040\040\040$$;
CREATE\040OR\040REPLACE\040FUNCTION\040averageState(state\040tuple<int,bigint>,\040val\040int)\040\040\040\040\040CALLED\040ON\040NULL\040INPUT\040\040\040\040\040RETURNS\040tuple\040\040\040\040\040LANGUAGE\040java\040\040\040\040\040AS\040$$\040\040\040\040\040\040\040\040\040if\040(val\040!=\040null)\040{\040\040\040\040\040\040\040\040\040\040\040\040\040state.setInt(0,\040state.getInt(0)+1);\040\040\040\040\040\040\040\040\040\040\040\040\040state.setLong(1,\040state.getLong(1)+val.intValue());\040\040\040\040\040\040\040\040\040}\040\040\040\040\040\040\040\040\040return\040state;\040\040\040\040\040$$;
CREATE\040OR\040REPLACE\040FUNCTION\040averageFinal\040(state\040tuple<int,bigint>)
\040\040\040\040CALLED\040ON\040NULL\040INPUT
\040\040\040\040RETURNS\040double
\040\040\040\040LANGUAGE\040java
\040\040\040\040AS\040$$
\040\040\040\040\040\040\040\040double\040r\040=\0400;
\040\040\040\040\040\040\040\040if\040(state.getInt(0)\040==\0400)\040return\040null;
\040\040\040\040\040\040\040\040r\040=\040state.getLong(1);
\040\040\040\040\040\040\040\040r\040/=\040state.getInt(0);
\040\040\040\040\040\040\040\040return\040Double.valueOf(r);
\040\040\040\040$$;
CREATE\040OR\040REPLACE\040FUNCTION\040averageFinal\040(state\040tuple<int,bigint>)\040\040\040\040\040CALLED\040ON\040NULL\040INPUT\040\040\040\040\040RETURNS\040double\040\040\040\040\040LANGUAGE\040java\040\040\040\040\040AS\040$$\040\040\040\040\040\040\040\040\040double\040r\040=\0400;\040\040\040\040\040\040\040\040\040if\040(state.getInt(0)\040==\0400)\040return\040null;\040\040\040\040\040\040\040\040\040r\040=\040state.getLong(1);\040\040\040\040\040\040\040\040\040r\040/=\040state.getInt(0);\040\040\040\040\040\040\040\040\040return\040Double.valueOf(r);\040\040\040\040\040$$;
CREATE\040OR\040REPLACE\040AGGREGATE\040average(int)
\040\040\040\040SFUNC\040averageState
\040\040\040\040STYPE\040tuple
\040\040\040\040FINALFUNC\040averageFinal
\040\040\040\040INITCOND\040(0,\0400);
CREATE\040OR\040REPLACE\040AGGREGATE\040average(int)\040\040\040\040\040SFUNC\040averageState\040\040\040\040\040STYPE\040tuple\040\040\040\040\040FINALFUNC\040averageFinal\040\040\040\040\040INITCOND\040(0,\0400);
CREATE\040TABLE\040atable\040(
\040\040\040\040pk\040int\040PRIMARY\040KEY,
\040\040\040\040val\040int
);
CREATE\040TABLE\040atable\040(\040\040\040\040\040pk\040int\040PRIMARY\040KEY,\040\040\040\040\040val\040int\040);
INSERT\040INTO\040atable\040(pk,\040val)\040VALUES\040(1,1);
INSERT\040INTO\040atable\040(pk,\040val)\040VALUES\040(2,2);
INSERT\040INTO\040atable\040(pk,\040val)\040VALUES\040(3,3);
INSERT\040INTO\040atable\040(pk,\040val)\040VALUES\040(4,4);
exit
use\040dev;
select\040*\040from\040t;
CREATE\040OR\040REPLACE\040FUNCTION\040averageState(state\040tuple<int,bigint>,\040val\040int)
\040\040\040\040CALLED\040ON\040NULL\040INPUT
\040\040\040\040RETURNS\040tuple
\040\040\040\040LANGUAGE\040java
\040\040\040\040AS\040$$
\040\040\040\040\040\040\040\040if\040(val\040!=\040null)\040{
\040\040\040\040\040\040\040\040\040\040\040\040state.setInt(0,\040state.getInt(0)+1);
\040\040\040\040\040\040\040\040\040\040\040\040state.setLong(1,\040state.getLong(1)+val.intValue());
\040\040\040\040\040\040\040\040}
\040\040\040\040\040\040\040\040return\040state;
\040\040\040\040$$;
CREATE\040OR\040REPLACE\040FUNCTION\040averageState(state\040tuple<int,bigint>,\040val\040int)\040\040\040\040\040CALLED\040ON\040NULL\040INPUT\040\040\040\040\040RETURNS\040tuple\040\040\040\040\040LANGUAGE\040java\040\040\040\040\040AS\040$$\040\040\040\040\040\040\040\040\040if\040(val\040!=\040null)\040{\040\040\040\040\040\040\040\040\040\040\040\040\040state.setInt(0,\040state.getInt(0)+1);\040\040\040\040\040\040\040\040\040\040\040\040\040state.setLong(1,\040state.getLong(1)+val.intValue());\040\040\040\040\040\040\040\040\040}\040\040\040\040\040\040\040\040\040return\040state;\040\040\040\040\040$$;
CREATE\040OR\040REPLACE\040FUNCTION\040averageFinal\040(state\040tuple<int,bigint>)
\040\040\040\040CALLED\040ON\040NULL\040INPUT
\040\040\040\040RETURNS\040double
\040\040\040\040LANGUAGE\040java
\040\040\040\040AS\040$$
\040\040\040\040\040\040\040\040double\040r\040=\0400;
\040\040\040\040\040\040\040\040if\040(state.getInt(0)\040==\0400)\040return\040null;
\040\040\040\040\040\040\040\040r\040=\040state.getLong(1);
\040\040\040\040\040\040\040\040r\040/=\040state.getInt(0);
\040\040\040\040\040\040\040\040return\040Double.valueOf(r);
\040\040\040\040$$;
CREATE\040OR\040REPLACE\040FUNCTION\040averageFinal\040(state\040tuple<int,bigint>)\040\040\040\040\040CALLED\040ON\040NULL\040INPUT\040\040\040\040\040RETURNS\040double\040\040\040\040\040LANGUAGE\040java\040\040\040\040\040AS\040$$\040\040\040\040\040\040\040\040\040double\040r\040=\0400;\040\040\040\040\040\040\040\040\040if\040(state.getInt(0)\040==\0400)\040return\040null;\040\040\040\040\040\040\040\040\040r\040=\040state.getLong(1);\040\040\040\040\040\040\040\040\040r\040/=\040state.getInt(0);\040\040\040\040\040\040\040\040\040return\040Double.valueOf(r);\040\040\040\040\040$$;
CREATE\040OR\040REPLACE\040AGGREGATE\040average(int)
\040\040\040\040SFUNC\040averageState
\040\040\040\040STYPE\040tuple
\040\040\040\040FINALFUNC\040averageFinal
\040\040\040\040INITCOND\040(0,\0400);
CREATE\040OR\040REPLACE\040AGGREGATE\040average(int)\040\040\040\040\040SFUNC\040averageState\040\040\040\040\040STYPE\040tuple\040\040\040\040\040FINALFUNC\040averageFinal\040\040\040\040\040INITCOND\040(0,\0400);
CREATE\040TABLE\040atable\040(
\040\040\040\040pk\040int\040PRIMARY\040KEY,
\040\040\040\040val\040int
);
CREATE\040TABLE\040atable\040(\040\040\040\040\040pk\040int\040PRIMARY\040KEY,\040\040\040\040\040val\040int\040);
INSERT\040INTO\040atable\040(pk,\040val)\040VALUES\040(1,1);
INSERT\040INTO\040atable\040(pk,\040val)\040VALUES\040(2,2);
INSERT\040INTO\040atable\040(pk,\040val)\040VALUES\040(3,3);
INSERT\040INTO\040atable\040(pk,\040val)\040VALUES\040(4,4);
SELECT\040average(val)\040FROM\040atable;
select\040now()\040from\040t;
select\040*\040from\040t;
insert\040into\040T\040(pk,f1,f2,f3)\040values\040(4,4,4,4)\040;
insert\040into\040T\040(pk,f1,f2)\040values\040(4,4,4)\040;
select\040*\040from\040t;
select\040*\040from\040t\040where\040pk=4;
select\040*\040from\040t\040where\040pk=3;
select\040*\040from\040t\040where\040f1=3;
select\040*\040from\040t\040where\040f1=3\040allow\040filtering;
select\040*\040from\040t\040where\040f1=22\040allow\040filtering;
select\040*\040from\040t\040where\040pk=22\040allow\040filtering;
select\040*\040from\040t\040where\040pk\040>\0401\040and\040pk\040<=\0404\040allow\040filtering;
select\040*\040from\040t\040where\040pk\040>\0401\040or\040pk\040<=\0404\040allow\040filtering;
select\040*\040from\040t\040where\040pk\040=\0401\040and\040f2=1114\040allow\040filtering;
select\040*\040from\040t\040where\040pk\040=\0401\040and\040f2=111\040allow\040filtering;
select\040*\040from\040t\040where\040pk\040in\040(\0401)\040and\040f2=111\040allow\040filtering;
select\040*\040from\040t\040where\040pk\040=>\0401\040and\040f2=111\040allow\040filtering;
select\040*\040from\040t\040where\040pk\040>=\0401\040and\040f2=111\040allow\040filtering;
select\040*\040from\040t\040where\040pk\040in\040(\0401)\040and\040f2=111\040allow\040filtering;
quit
